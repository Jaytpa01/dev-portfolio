---
import {
	ResourceDisplay,
	type Resource,
	type Folder,
} from "@components/Resources";
import BaseLayout from "@layouts/Base.astro";

const folders: Folder[] = [
	{
		id: "root",
		name: "Resources",
	},
	{
		id: "articles",
		name: "Articles",
		parentFolder: "root",
	},
	{
		id: "tools",
		name: "Tools",
		parentFolder: "root",
	},
];

const resources: Resource[] = [
	{
		name: "That XOR Trick",
		href: "https://florian.github.io//xor-trick/",
		folderId: "articles",
	},
	{
		name: "Obsidian",
		href: "https://obsidian.md/",
		folderId: "tools",
	},
	{
		name: "Pomofocus",
		href: "https://pomofocus.io/",
		folderId: "tools",
	},
];

// foldersMap is used to map a folder id to it's contents
const folderMap: Record<string, Folder> = {};

// subfolderMap is to map a folder id to an array of ids, representing its subfolder
const subfolderMap: Record<string, string[]> = {};

for (const folder of folders) {
	folderMap[folder.id] = folder;

	if (!folder.parentFolder) {
		continue;
	}

	// if the parent folder has no mapped subfolders yet, create and map it here and move onto next folder
	if (!subfolderMap[folder.parentFolder]) {
		subfolderMap[folder.parentFolder] = [folder.id];
		continue;
	}

	// if parent folder already has some mappings, we just add this one to it
	subfolderMap[folder.parentFolder].push(folder.id);
}

// folderResourceMap is used to map a resource to its folder
const folderResourceMap: Record<string, Resource[]> = {};
for (const resource of resources) {
	// if folder has no mapped resources, create a mapping and add this resource, then continue to next resource
	if (!folderResourceMap[resource.folderId]) {
		folderResourceMap[resource.folderId] = [resource];
		continue;
	}

	// if folder mapping already created, add this resource to it
	folderResourceMap[resource.folderId].push(resource);
}
---

<BaseLayout>
	<h2 class="font-semibold">A series of random resources I've collected.</h2>

	<div class="py-2"></div>

	<ResourceDisplay
		rootFolderId="root"
		{folderMap}
		{subfolderMap}
		{folderResourceMap}
		client:load
	/>
</BaseLayout>
